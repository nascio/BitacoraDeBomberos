<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:l="clr-namespace:BitacoraDeBomberos.WPF">

    <Style TargetType="{x:Type l:Ventana}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform x:Name="no_freeze" X="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}" Y="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:Ventana}">
                    <ControlTemplate.Resources>
                        <BlurEffect x:Key="Difuminado5Key" Radius="5" />
                        <BlurEffect x:Key="Difuminado4Key" Radius="4" />
                    </ControlTemplate.Resources>

                    <Grid Background="Transparent"
                          KeyboardNavigation.ControlTabNavigation="Cycle"
                          KeyboardNavigation.DirectionalNavigation="Cycle"
                          KeyboardNavigation.TabNavigation="Cycle">

                        <Border Margin="6"
                                Background="White"
                                CornerRadius="15"
                                Effect="{DynamicResource Difuminado5Key}" />

                        <Border BorderBrush="Black"
                                BorderThickness="5"
                                CornerRadius="15" />

                        <Border BorderBrush="Red"
                                BorderThickness="5"
                                CornerRadius="15"
                                Effect="{DynamicResource Difuminado5Key}" />

                        <ContentPresenter Margin="20,15"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Button Width="24"
                                Height="24"
                                Margin="0,-8,-8,0"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Right"
                                Command="{TemplateBinding CloseCommand}"
                                Focusable="False"
                                IsCancel="True"
                                IsTabStop="False">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid SnapsToDevicePixels="True">
                                        <Border x:Name="border" CornerRadius="20">
                                            <Border.Background>
                                                <RadialGradientBrush>
                                                    <GradientStop Offset="1" Color="#FFFFC6C6" />
                                                    <GradientStop Color="#BFFF0000" />
                                                    <GradientStop Offset="0.879" Color="#EBFFAFAF" />
                                                    <GradientStop Offset="0.397" Color="#C1FF0808" />
                                                </RadialGradientBrush>
                                            </Border.Background>
                                        </Border>

                                        <Border x:Name="border1"
                                                Margin="-3"
                                                BorderThickness="3"
                                                CornerRadius="20">
                                            <Border.BorderBrush>
                                                <RadialGradientBrush>
                                                    <GradientStop Color="Red" />
                                                    <GradientStop Offset="1" Color="#FFA02323" />
                                                </RadialGradientBrush>
                                            </Border.BorderBrush>
                                            <Border.Effect>
                                                <BlurEffect Radius="4" />
                                            </Border.Effect>
                                        </Border>

                                        <Path Width="12"
                                              Height="12"
                                              Data="M0,0 L100,100 M0,100 L100,0"
                                              Stretch="Fill"
                                              Stroke="White"
                                              StrokeEndLineCap="Round"
                                              StrokeStartLineCap="Round"
                                              StrokeThickness="1" />

                                        <Path Width="16"
                                              Height="16"
                                              Data="M0,0 L100,100 M0,100 L100,0"
                                              Effect="{DynamicResource Difuminado4Key}"
                                              Stretch="Fill"
                                              Stroke="White"
                                              StrokeEndLineCap="Round"
                                              StrokeStartLineCap="Round"
                                              StrokeThickness="4" />
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background">
                                                <Setter.Value>
                                                    <RadialGradientBrush>
                                                        <GradientStop Offset="1" Color="#FFFFC6C6" />
                                                        <GradientStop Color="#FF550000" />
                                                        <GradientStop Offset="0.879" Color="#EBC38484" />
                                                        <GradientStop Offset="0.397" Color="#C1780000" />
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="border1" Property="BorderBrush">
                                                <Setter.Value>
                                                    <RadialGradientBrush>
                                                        <GradientStop Color="#FFB60000" />
                                                        <GradientStop Offset="1" Color="#FF7C1F1F" />
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background">
                                                <Setter.Value>
                                                    <RadialGradientBrush>
                                                        <GradientStop Offset="1" Color="#FFFFE8C6" />
                                                        <GradientStop Color="#BFFFA500" />
                                                        <GradientStop Offset="0.879" Color="#EBFFDEAF" />
                                                        <GradientStop Offset="0.397" Color="#C1FFA508" />
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="border1" Property="BorderBrush">
                                                <Setter.Value>
                                                    <RadialGradientBrush>
                                                        <GradientStop Color="#FFFF7400" />
                                                        <GradientStop Offset="1" Color="#FFA06D23" />
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation AccelerationRatio="0.2"
                                                     DecelerationRatio="0.8"
                                                     SpeedRatio="0.9"
                                                     Storyboard.TargetProperty="(ContentControl.RenderTransform).(TranslateTransform.X)"
                                                     To="-100"
                                                     Duration="0:0:1" />
                                    <DoubleAnimation AccelerationRatio="0.2"
                                                     DecelerationRatio="0.8"
                                                     SpeedRatio="0.8"
                                                     Storyboard.TargetProperty="(ContentControl.RenderTransform).(TranslateTransform.Y)"
                                                     To="-100"
                                                     Duration="0:0:1" />
                                    <DoubleAnimation AccelerationRatio="0.2"
                                                     BeginTime="0:0:1"
                                                     DecelerationRatio="0.8"
                                                     SpeedRatio="0.9"
                                                     Storyboard.TargetProperty="(ContentControl.RenderTransform).(TranslateTransform.X)"
                                                     To="0"
                                                     Duration="0:0:1" />
                                    <DoubleAnimation AccelerationRatio="0.2"
                                                     BeginTime="0:0:1"
                                                     DecelerationRatio="0.8"
                                                     SpeedRatio="0.8"
                                                     Storyboard.TargetProperty="(ContentControl.RenderTransform).(TranslateTransform.Y)"
                                                     To="0"
                                                     Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:TituloLabel}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Padding" Value="2,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="l:TituloLabel">
                    <StackPanel Margin="{TemplateBinding Padding}" Orientation="Vertical">

                        <TextBlock Text="{TemplateBinding Titulo}"
                                   FontSize="10"
                                   FontWeight="Bold"
                                   Foreground="Black" />

                        <TextBlock Text="{TemplateBinding Contenido}"
                                   Margin="20,5,0,0"
                                   FontWeight="{TemplateBinding FontWeight}"
                                   Foreground="{TemplateBinding Foreground}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:TituloTextBox}">
        <Style.Resources>
            <BlurEffect x:Key="Difuminado5Key" Radius="5" />
            <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
            <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
            <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />
        </Style.Resources>

        <Setter Property="ShowError">
            <Setter.Value>
                <!--  Value="{Binding Path=(Validation.HasError), RelativeSource={RelativeSource Self}}"  -->
                <MultiBinding Converter="{l:errorconverter}">
                    <Binding Path="(Validation.HasError)" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="(Validation.Errors)" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>

            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="2,5" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:TituloTextBox}">

                    <StackPanel Margin="{TemplateBinding Padding}" Orientation="Vertical">

                        <TextBlock Text="{TemplateBinding Titulo}"
                                   FontSize="10"
                                   FontWeight="Bold"
                                   Foreground="Black"
                                   TextAlignment="Left" />

                        <Grid Margin="20,5,0,0" Background="{TemplateBinding Background}">
                            <Border x:Name="border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True" />
                            <Border x:Name="otroBorder"
                                    Margin="-2"
                                    BorderBrush="{TemplateBinding ErrorBrush}"
                                    BorderThickness="3"
                                    CornerRadius="5"
                                    Effect="{DynamicResource Difuminado5Key}"
                                    Opacity="0" />


                            <Border x:Name="error"
                                    Margin="-2"
                                    BorderBrush="{TemplateBinding ErrorBrush}"
                                    BorderThickness="3"
                                    CornerRadius="5"
                                    Effect="{DynamicResource Difuminado5Key}"
                                    Opacity="0" />


                            <Border x:Name="marca"
                                    Padding="5"
                                    Opacity="0"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter Margin="{TemplateBinding MarcaAguaPadding}"
                                                  Content="{TemplateBinding MarcaAguaContent}"
                                                  ContentSource="MarcaAguaContent"
                                                  ContentStringFormat="{TemplateBinding MarcaAguaStringFormat}"
                                                  ContentTemplate="{TemplateBinding MarcaAguaTemplate}" />
                            </Border>

                            <ScrollViewer x:Name="PART_ContentHost"
                                          Margin="{TemplateBinding BorderThickness}"
                                          Padding="5"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </Grid>

                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <!--  Marca de agua  -->
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="marca" Property="Opacity" Value="0.35" />
                        </Trigger>

                        <!--  Si el teclado tiene el foco y no hay error.  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="ShowError" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="otroBorder" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation AutoReverse="True"
                                                         RepeatBehavior="3x"
                                                         Storyboard.TargetName="otroBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation AutoReverse="False"
                                                         BeginTime="0:0:0.75"
                                                         Storyboard.TargetName="otroBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation AutoReverse="False"
                                                         Storyboard.TargetName="otroBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0.25"
                                                         To="0"
                                                         Duration="0:0:0.01" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">

                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />


                        </Trigger>



                        <Trigger Property="ShowError" Value="True">
                            <!--<Setter TargetName="error" Property="BorderBrush" Value="{Binding Path=ErrorBrush, RelativeSource={RelativeSource TemplatedParent}}" />-->
                            <Setter TargetName="error" Property="BorderBrush" Value="{Binding Path=(Validation.Errors).CurrentItem.ErrorContent, Converter={l:severidadconverter}, RelativeSource={RelativeSource TemplatedParent}}" />

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="3x">
                                        <DoubleAnimation AutoReverse="False"
                                                         Storyboard.TargetName="error"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.55" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation AutoReverse="False"
                                                         Storyboard.TargetName="error"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0.25"
                                                         To="0"
                                                         Duration="0:0:0.01" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type l:TituloComboBox}">
        <Style.Resources>
            <!--  region  -->
            <LinearGradientBrush x:Key="ComboBox.Static.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="#FFF0F0F0" />
                <GradientStop Offset="1.0" Color="#FFE5E5E5" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000" />
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="#FFECF4FC" />
                <GradientStop Offset="1.0" Color="#FFDCECFC" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA" />
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="#FFEBF4FC" />
                <GradientStop Offset="1.0" Color="#FFDCECFC" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000" />
            <LinearGradientBrush x:Key="ComboBox.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="#FFDAECFC" />
                <GradientStop Offset="1.0" Color="#FFC4E0FC" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5" />
            <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0.0" Color="#FFDAEBFC" />
                <GradientStop Offset="1.0" Color="#FFC4E0FC" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060" />
            <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="ClickMode" Value="Press" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="templateRoot"
                                    Background="{StaticResource ComboBox.Static.Background}"
                                    BorderBrush="{StaticResource ComboBox.Static.Border}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <Border x:Name="splitBorder"
                                        Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                        Margin="0"
                                        HorizontalAlignment="Right"
                                        BorderBrush="Transparent"
                                        BorderThickness="1"
                                        SnapsToDevicePixels="true">
                                    <Path x:Name="arrow"
                                          Margin="0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                          Fill="{StaticResource ComboBox.Static.Glyph}" />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Border}" />
                                    <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                                    <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Pressed.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                                    <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Disabled.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                                    <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                                    <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                                    <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--  endregion  -->

            <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type l:TituloComboBox}">
                <StackPanel Margin="{TemplateBinding Padding}" Orientation="Vertical">

                    <TextBlock Text="{TemplateBinding Titulo}"
                               FontSize="10"
                               FontWeight="Bold"
                               Foreground="Black" />

                    <Grid x:Name="templateRoot"
                          Margin="20,5,0,0"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup"
                               Grid.ColumnSpan="2"
                               Margin="1"
                               AllowsTransparency="true"
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Border x:Name="shadow"
                                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    Background="Transparent">
                                <Border x:Name="dropDownBorder"
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                        BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas"
                                                    Width="0"
                                                    Height="0"
                                                    VerticalAlignment="Top"
                                                    HorizontalAlignment="Left">
                                                <Rectangle x:Name="opaqueRect"
                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                           Fill="{Binding Background, ElementName=dropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                        <ToggleButton x:Name="toggleButton"
                                      Grid.ColumnSpan="2"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ComboBoxToggleButton}" />


                        <Border x:Name="error"
                                Grid.ColumnSpan="2"
                                Margin="-2"
                                BorderThickness="3"
                                CornerRadius="5"
                                Effect="{DynamicResource Difuminado5Key}"
                                Opacity="0" />


                        <Border Padding="5" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding BorderThickness}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              IsHitTestVisible="false"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>

                </StackPanel>





                <ControlTemplate.Triggers>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter TargetName="error" Property="BorderBrush" Value="#FF569DE5" />

                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation AutoReverse="True"
                                                     RepeatBehavior="3x"
                                                     Storyboard.TargetName="error"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="0"
                                                     To="1"
                                                     Duration="0:0:0.15" />
                                    <DoubleAnimation AutoReverse="False"
                                                     BeginTime="0:0:0.75"
                                                     Storyboard.TargetName="error"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="1"
                                                     To="0.25" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation AutoReverse="False"
                                                     Storyboard.TargetName="error"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="0.25"
                                                     To="0"
                                                     Duration="0:0:0.01" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>

                    <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                        <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                        <Setter TargetName="shadow" Property="Background" Value="#71000000" />
                    </Trigger>
                    <Trigger Property="HasItems" Value="false">
                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="true" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                    </MultiTrigger>
                    <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF" />
            <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="AllowDrop" Value="true" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Background="Transparent"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type l:TituloComboBox}">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                    </Grid.ColumnDefinitions>
                    <Popup x:Name="PART_Popup"
                           Grid.ColumnSpan="2"
                           AllowsTransparency="true"
                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                           Placement="Bottom"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <Border x:Name="shadow"
                                MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Background="Transparent">
                            <Border x:Name="dropDownBorder"
                                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                    BorderThickness="1">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas"
                                                Width="0"
                                                Height="0"
                                                VerticalAlignment="Top"
                                                HorizontalAlignment="Left">
                                            <Rectangle x:Name="opaqueRect"
                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                       Fill="{Binding Background, ElementName=dropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Border>
                    </Popup>
                    <ToggleButton x:Name="toggleButton"
                                  Grid.ColumnSpan="2"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{StaticResource ComboBoxToggleButton}" />
                    <Border x:Name="border"
                            Margin="{TemplateBinding BorderThickness}"
                            Background="{StaticResource TextBox.Static.Background}">
                        <TextBox x:Name="PART_EditableTextBox"
                                 Margin="{TemplateBinding Padding}"
                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                 Style="{StaticResource ComboBoxEditableTextBox}" />
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter TargetName="border" Property="Opacity" Value="0.56" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="true">
                        <Setter Property="Foreground" Value="Black" />
                    </Trigger>
                    <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                        <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                        <Setter TargetName="shadow" Property="Background" Value="#71000000" />
                    </Trigger>
                    <Trigger Property="HasItems" Value="false">
                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="true" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                    </MultiTrigger>
                    <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                        <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

        </Style.Resources>


        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="2,5" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Padding" Value="2,5" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>


    </Style>
</ResourceDictionary>